1. Changing Notepad++ as default editor in git
  Command Listing
  notepad++ # testing to make sure it works
  notepad++ .bashrc # see contents of .bashrc file below
  npp # testing npp alias
  git config --global core.editor "notepad++.exe -multiInst -nosession"
  npp .gitconfig # open Git config file, should contain snip below
  ~/.bashrc File
  alias npp='notepad++.exe -multiInst -nosession'
  ~/.gitconfig File (snip)
  [core]
  editor = notepad++.exe -multiInst -nosession
  
2. To see files tracked in staging area
  git ls-files
  
3. To undo the changes from staging area
  git reset HEAD filename
  
4. Git log
  git log --oneline --graph --decorate
    --oneline --> will show the logs in one line for each commit
    --graph --> show the branch in graph
    --decorate --> shows the tags and branches
    
  git log --since="3 days ago"  (To show logs of last 3 days)
  
5. To see commits happend in specific file
  git log -- fileame
  
6. To know the diff from commit hash
  git show commit-hash
  
7. To set alias for git commands
  git config --global alias.ALIAS_NAME(gitlog) "log --all --oneline --graph --decorate"
  
8. Excluding unwanted files and folders
  create .gitignore and commit. we can put our filename, foldername or regular expression to ignore the files

9. Rebase
   Create two branch master and feature. do 2 commits in each branch, you are currently in feature and not planning to merge the feature branch commits to master, but instead
   wants the two commits from master branch to be synced with tis feature branch.
   git rebase master

10. Stash
  In the current branch we have done some changes in the file and we havent committed those changes, now you want to work on some other idea, but you want to save this changes for
  later purpose we can save it.Run "git stash" and the current branch will become clean.
  git stash or git stash save (By default if we run git stash it will append the "save" keyword to it )
  
  To list the stash
  git stash list
  
  To drop the latest stash from list
  git stash drop
  
  To apply the stash to the current branch
  git stash apply
  
  If we do some chnages in the tracked file and also in one untacked file (new file). If we run git stash now, it will only stash the tracked files, it wont stash the untracked
  files
  git stash -u --> to stash both tracked and untracked files
  we can add the untracked file and run "git stash" also
  
  To do git stash and git stash drop in a single command --> git stash pop
  
  Create a stash with message
  git stash save "message"
 
  To know the file changes in stash
  git stash show stah@{index_no}  --> latest stash will be assigned with index no '0'
  
  To apply the specific stash from stash list
  git stash apply stash@{index_no}
  
  To drop specific stash
  git stash drop stash@{index_no}
  
  To drop all stashes from list in one shot
  git stash clear
  
  To take changes from one branch to another branch
  First stash the files in the current branch then exceute the following command, it will automatically create a new branch, switch to that branch and take all the changes to
  that branch and that stash will be dropped from the stash list
  git stash branch new_branch_name
  
  
  
  
  
  
