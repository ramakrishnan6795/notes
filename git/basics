1. Changing Notepad++ as default editor in git
  Command Listing
  notepad++ # testing to make sure it works
  notepad++ .bashrc # see contents of .bashrc file below
  npp # testing npp alias
  git config --global core.editor "notepad++.exe -multiInst -nosession"
  npp .gitconfig # open Git config file, should contain snip below
  ~/.bashrc File
  alias npp='notepad++.exe -multiInst -nosession'
  ~/.gitconfig File (snip)
  [core]
  editor = notepad++.exe -multiInst -nosession
  
2. To see files tracked in staging area
  git ls-files
  
3. To undo the changes from staging area
  git reset HEAD filename
  
4. Git log
  git log --oneline --graph --decorate
    --oneline --> will show the logs in one line for each commit
    --graph --> show the branch in graph
    --decorate --> shows the tags and branches
    
  git log --since="3 days ago"  (To show logs of last 3 days)
  
5. To see commits happend in specific file
  git log -- fileame
  
6. To know the diff from commit hash
  git show commit-hash
  
7. To set alias for git commands
  git config --global alias.ALIAS_NAME(gitlog) "log --all --oneline --graph --decorate"
  
8. Excluding unwanted files and folders
  create .gitignore and commit. we can put our filename, foldername or regular expression to ignore the files

9. Rebase
   Create two branch master and feature. do 2 commits in each branch, you are currently in feature and not planning to merge the feature branch commits to master, but instead
   wants the two commits from master branch to be synced with tis feature branch.
   git rebase master
